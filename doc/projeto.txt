Registro de Atividades Pendentes
---------------------------------------------------------------------------------------------------------
Validar informações do formulário é no forms.py
implementar banco de dados para o quadro de avisos.
Implementar na base de itens a referêmcia ao Fornecedor e ao armazem
Encadear Estado/Municipio para o cadastro de fornecedores.
Limitar a quantidade de Logins no Django.
Permitir a todos os usuários do sistema fazer requisições de items.
Implementar Manual do Usuário de Sistemas.
Iniciar testes do Produto.
Documentar Requisitos atendidos.
Implementar requisições para o sistema.
Corrigir o problema da troca de senha que esta executando o logout no sistema.
Corrigir o problema da indexação dos estados com os municipios.


Registro de Atividades Executadas
---------------------------------------------------------------------------------------------------------
10-08-2016: Inclusão do Armazem no cadastro de Itens.
03-08-2016: Mudança no footer para identificar a instituição desenvolvedora do sistema.
03-08-2016: Redirecionamento da página inicial do ambiente para /usuario/home
03-08-2016: Inserido na base de dados de fornecedores o campo 'bairro'.
02-08-2016: Permitir ao usuário realizar a troca da senha pela edição do seu perfil.
29-07-2016: Implantado acesso apenas por https.
29-07-2016: Implantado a aplicação no serviço http do apache
22-07-2016: Mudança diretorio static das bases para o Core.
21-07-2016: Inserido os dados da tabela Estados, e dos Municipios de Mato Grosso do Sul no sistema.
20-07-2016: Hospedado a base de dados no MySql, instalando o  cymysql e django-cymysql através do pip.
13-07-2016: Fixando o nome a ser pesquisado após a consulta no campo de consulta.
12-07-2016: Pesquisa na base de Armazem, Fornecedor e item acrescida ao sistema.
11-07-2016: Troca dos campos 'NUMERO' dos endereços e 'CNPJ' para textos para ajustes na formatação tela.
11-07-2016: Inserido no footer.html a função navbar-fixed-bottom para fixar ao final da página.
06-07-2016: Implementado permissões para acesso a adição, alteração e exclusão padrão: 'pode_administrar'
06-07-2016: Ajustes na tela de Login, fixando o tamanho da tela de entrada e exibindo a mensagem de erro.
05-07-2016: Implementado na base de dados o usuário responsável pela alteração e criação do registro.
04-07-2016: Implementado o acesso ao sistema atráves de Login padrao do django.
04-07-2016: Imposto a obrigatóriedade de acesso atráves de um Login para as funções de view. (Controler) 
16-06-2016: Ajustes no Designer do Bootstrap.
22-05-2016: Controle de paginação das listas, foi adicionado a Itens, Fornecedores e Armazém.
02-05-2016: Implementado CRUD para a base de Itens.
20-04-2016: Implementado CRUD para a base de Fornecedores.
04-04-2016: Implementado CRUD para a base de Armazém.
21-03-2016: Inicio o Projeto. 